{"version":3,"sources":["components/About.js","components/Alerts.js","components/Navbar.js","components/TextFunc.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","bodyStyle","react_default","a","createElement","className","id","style","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","Alerts","height","alerts","concat","role","msg","Navbar","dist","to","title","aria-label","aria-current","onClick","toggleMode","htmlFor","TextFunc","_useState","useState","_useState2","Object","slicedToArray","text","newText","Fragment","value","onChange","event","target","rows","placeholder","disabled","length","finalText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","border","split","filter","element","App","setMode","_useState3","_useState4","alert","setAlert","message","setTimeout","document","body","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.428af45e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n    Link,\r\n    Outlet\r\n} from \"react-router-dom\";\r\n\r\nexport default function About(props) {\r\n\r\n    let myStyle = {\r\n        color: props.mode==='light'?'black':'white',\r\n        backgroundColor: props.mode==='light'?'white':'#212529',\r\n        \r\n    }\r\n\r\n    let bodyStyle = {\r\n        color: props.mode==='light'?'black':'white',\r\n        backgroundColor: props.mode==='light'?'white':'#373737',\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\" >\r\n      <button style={myStyle} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n      <strong>Analyze Text</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\" >\r\n      <div className=\"accordion-body\" style={bodyStyle}>\r\n      ToolTips provides you with a simple and effective way to manipulate your text.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n      <button style={myStyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\r\n      <strong>Free To Use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\r\n      <div className=\"accordion-body\" style={bodyStyle}>\r\n       ToolTips is a free tool that offers character and word counts in real time for a given text.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n      <button  style={myStyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\r\n      <strong>Browser Compatible</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\r\n      <div className=\"accordion-body\" style={bodyStyle}>\r\n      Any online browser, including Chrome, Firefox, Safari, and Opera, can use this tool\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default function Alerts(props) {\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alerts &&\r\n        <div>\r\n            <div className={`alert alert-${props.alerts.type} alert-dismissible fade show`} role=\"alert\" >\r\n                <strong >{props.alerts.type}:</strong> {props.alerts.msg}\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  Outlet\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className={`navbar-brand text-${props.mode === 'light'?'dark':'light'}`} to=\"/\"><b>{props.title}</b></Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className={`nav-link text-${props.mode === 'light'?'dark':'light'}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className={`nav-link text-${props.mode === 'light'?'dark':'light'}`} to=\"/about\">About</Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch my-2 text-${props.mode === 'light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextFunc(props) {\r\n    \r\n    function upperFun(){\r\n        let finalText = text.toUpperCase()\r\n        newText(finalText)\r\n        props.showAlert(\"converted to uppercase\",\"success\")\r\n    }\r\n\r\n    function lowerFun(){\r\n        let finalText = text.toLowerCase()\r\n        newText(finalText)\r\n        props.showAlert(\"converted to lowercase\",\"success\")\r\n    }\r\n\r\n    function clearFun(){\r\n        let finalText = \"\"\r\n        newText(finalText)\r\n        props.showAlert(\"text cleared\",\"success\")\r\n    }\r\n\r\n    function copyFun(){\r\n        navigator.clipboard.writeText(text)\r\n        props.showAlert(\"text copied to clipboard\",\"success\")\r\n    }\r\n\r\n    function handleChange(event){\r\n        newText(event.target.value)\r\n    }\r\n\r\n    const [text, newText] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n        <div className='container'>\r\n            <div className=\"mb-1\" >\r\n                <h3 style={{color: props.mode==='light'?'black': 'white'}}>Text Formatter</h3>\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\"></label>\r\n                <textarea className=\"form-control\" value={text} onChange={handleChange} style={{backgroundColor: props.mode==='light'?'white': '#212121', color:props.mode==='light'?'black': 'white'}}  id=\"exampleFormControlTextarea1\" rows=\"7\" placeholder='Enter Text Here'></textarea>\r\n            </div>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={upperFun}>UpperCase</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={lowerFun}>LowerCase</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={copyFun}>Copy Text</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-2\" onClick={clearFun}>Clear Text</button>\r\n        </div>\r\n        <div className='container my-4' style={{color: props.mode==='light'?'black': 'white'}}>\r\n            <h3>Preview</h3>\r\n            <div className='container py-1 my-1' style={{backgroundColor: props.mode==='light'?'white': '#212121', border:'2px solid white'}}>\r\n            <p>{text.length>0?text:'Nothing to preview'}</p>\r\n            </div>\r\n            <h3>Text Summary</h3>\r\n            <div  className='container py-1 my-1' style={{backgroundColor: props.mode==='light'?'white': '#212121', border:'2px solid white'}}>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element!==''}).length} words and {text.length} characters</p>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alerts from './components/Alerts';\nimport Navbar from './components/Navbar';\nimport TextFunc from './components/TextFunc';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link,\n  Outlet\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')  //Decides wether dark mode is enabled or no\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'dark'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('light Mode is enabled','success')\n      document.title = 'ToolTips'\n    }\n    else{\n      setMode('dark')\n      document.body.style.backgroundColor = '#373737'\n      showAlert('dark Mode is enabled','success')\n      document.title = 'ToolTips-Dark Mode'\n    }\n  }\n\n  return (\n    <>\n    <BrowserRouter>\n    <Navbar mode={mode} toggleMode={toggleMode} title =\"ToolTips\"/>\n    <Alerts alerts={alert}/>\n    <div className='container my-3'>\n      <Routes>\n        <Route exact path=\"/about\" element={<About mode={mode} />} />\n        <Route exact path=\"/\" element={<TextFunc showAlert={showAlert} mode={mode} />} />\n     </Routes>\n    </div>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}